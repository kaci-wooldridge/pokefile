{"ast":null,"code":"var _jsxFileName = \"/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\"\n  });\n  let navigate = useNavigate();\n  const registerNewUser = () => {\n    return fetch(\"http://localhost:8088/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => res.json()).then(createdUser => {\n      if (createdUser.hasOwnProperty(\"id\")) {\n        localStorage.setItem(\"pokefile_user\", JSON.stringify({\n          id: createdUser.id\n        }));\n        navigate(\"/\");\n      }\n    });\n  };\n  const handleRegister = e => {\n    e.preventDefault();\n    return fetch(`http://localhost:8088/users?email=${user.email}`).then(res => res.json()).then(response => {\n      if (response.length > 0) {\n        // Duplicate email. No good.\n        window.alert(\"Account with that email address already exists\");\n      } else {\n        // Good email, create user.\n        registerNewUser();\n      }\n    });\n  };\n  const updateUser = evt => {\n    const copy = {\n      ...user\n    };\n    copy[evt.target.id] = evt.target.value;\n    setUser(copy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form--login\",\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3 font-weight-normal\",\n        children: \"Please Register for Kandy Korner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ame\",\n          children: \" Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateUser,\n          type: \"text\",\n          id: \"name\",\n          className: \"form-control\",\n          placeholder: \"name\",\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" Email address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: updateUser,\n          type: \"email\",\n          id: \"email\",\n          className: \"form-control\",\n          placeholder: \"Email address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: evt => {\n            const copy = {\n              ...user\n            };\n            copy.isStaff = evt.target.checked;\n            setUser(copy);\n          },\n          type: \"checkbox\",\n          id: \"isStaff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \" I am an employee \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"WF6sUmxQXiY4gSHnlkzqHIHdeh0=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","Register","props","user","setUser","email","name","navigate","registerNewUser","fetch","method","headers","body","JSON","stringify","then","res","json","createdUser","hasOwnProperty","localStorage","setItem","id","handleRegister","e","preventDefault","response","length","window","alert","updateUser","evt","copy","target","value","textAlign","isStaff","checked"],"sources":["/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Register.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const [user, setUser] = useState({\n        email: \"\",\n        name: \"\",\n    })\n    let navigate = useNavigate()\n\n    const registerNewUser = () => {\n        return fetch(\"http://localhost:8088/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(user)\n        })\n            .then(res => res.json())\n            .then(createdUser => {\n                if (createdUser.hasOwnProperty(\"id\")) {\n                    localStorage.setItem(\"pokefile_user\", JSON.stringify({\n                        id: createdUser.id,\n                    }))\n\n                    navigate(\"/\")\n                }\n            })\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        return fetch(`http://localhost:8088/users?email=${user.email}`)\n            .then(res => res.json())\n            .then(response => {\n                if (response.length > 0) {\n                    // Duplicate email. No good.\n                    window.alert(\"Account with that email address already exists\")\n                }\n                else {\n                    // Good email, create user.\n                    registerNewUser()\n                }\n            })\n    }\n\n    const updateUser = (evt) => {\n        const copy = {...user}\n        copy[evt.target.id] = evt.target.value\n        setUser(copy)\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Kandy Korner</h1>\n                <fieldset>\n                    <label htmlFor=\"ame\"> Name </label>\n                    <input onChange={updateUser}\n                           type=\"text\" id=\"name\" className=\"form-control\"\n                           placeholder=\"name\" required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"email\"> Email address </label>\n                    <input onChange={updateUser}\n                        type=\"email\" id=\"email\" className=\"form-control\"\n                        placeholder=\"Email address\" required />\n                </fieldset>\n                <fieldset>\n                    <input onChange={(evt) => {\n                        const copy = {...user}\n                        copy.isStaff = evt.target.checked\n                        setUser(copy)\n                    }}\n                        type=\"checkbox\" id=\"isStaff\" />\n                    <label htmlFor=\"email\"> I am an employee </label>\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\"> Register </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}