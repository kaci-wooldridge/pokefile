[{"/Users/kaciwooldridge/workspace/poke-capstone/src/index.js":"1","/Users/kaciwooldridge/workspace/poke-capstone/src/reportWebVitals.js":"2","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonList.js":"3","/Users/kaciwooldridge/workspace/poke-capstone/src/components/Pokefile.js":"4","/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Login.js":"5","/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Register.js":"6","/Users/kaciwooldridge/workspace/poke-capstone/src/components/views/Authorized.js":"7","/Users/kaciwooldridge/workspace/poke-capstone/src/components/nav/Navbar.js":"8","/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/Profile.js":"9","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonContainer.js":"10","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonSearch.js":"11","/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/Home.js":"12","/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/EditProfile.js":"13","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/GiveName.js":"14","/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/FeaturedPokemon.js":"15","/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/AddFeaturedPokemon.js":"16","/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/EditPokemon.js":"17","/Users/kaciwooldridge/workspace/poke-capstone/src/components/trainers/TrainersList.js":"18"},{"size":565,"mtime":1675183606064,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1675099613237,"results":"21","hashOfConfig":"20"},{"size":3018,"mtime":1676057232030,"results":"22","hashOfConfig":"20"},{"size":1180,"mtime":1676059781505,"results":"23","hashOfConfig":"20"},{"size":1981,"mtime":1676057232028,"results":"24","hashOfConfig":"20"},{"size":4380,"mtime":1675713356439,"results":"25","hashOfConfig":"20"},{"size":363,"mtime":1675184157320,"results":"26","hashOfConfig":"20"},{"size":1393,"mtime":1676057232029,"results":"27","hashOfConfig":"20"},{"size":7259,"mtime":1676060910720,"results":"28","hashOfConfig":"20"},{"size":360,"mtime":1675443517515,"results":"29","hashOfConfig":"20"},{"size":437,"mtime":1675717194793,"results":"30","hashOfConfig":"20"},{"size":384,"mtime":1675803442223,"results":"31","hashOfConfig":"20"},{"size":4494,"mtime":1675804672654,"results":"32","hashOfConfig":"20"},{"size":2122,"mtime":1676057232030,"results":"33","hashOfConfig":"20"},{"size":2154,"mtime":1675804845277,"results":"34","hashOfConfig":"20"},{"size":2178,"mtime":1675803659382,"results":"35","hashOfConfig":"20"},{"size":2488,"mtime":1675890473578,"results":"36","hashOfConfig":"20"},{"size":917,"mtime":1676057232031,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1bx4eno",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},"/Users/kaciwooldridge/workspace/poke-capstone/src/index.js",[],[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/reportWebVitals.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonList.js",["102","103","104","105"],[],"import { useState, useEffect } from 'react'\nimport './PokemonList.css'\nimport { GiveName } from './GiveName'\nimport { useNavigate } from 'react-router-dom'\n\nexport const PokemonList = ({ searchTermState }) => {\n\tconst [nameClick, setNameClick] = useState(false)\n\tconst localPokeUser = localStorage.getItem('pokefile_user')\n\tconst pokeUserObject = JSON.parse(localPokeUser)\n\tconst [pokemon, setPokemon] = useState([''])\n\tconst [pokemonName, setPokemonName] = useState('')\n\tconst [pokemonId, setPokemonId] = useState('')\n\tconst [filtered, setFiltered] = useState([])\n\tconst navigate = useNavigate()\n    const [shiny, setShiny] = useState(false)\n    \n\n\tuseEffect(() => {\n\t\tconst promises = []\n\t\tfor (let i = 1; i <= 1008; i++) {\n\t\t\tconst url = `https://pokeapi.co/api/v2/pokemon/${i}`\n\t\t\tpromises.push(fetch(url).then((res) => res.json()))\n\t\t}\n\t\tPromise.all(promises).then((results) => {\n\t\t\tconst pokemonList = results.map((result) => ({\n\t\t\t\tname: result.name,\n\t\t\t\timage: result.sprites['front_default'],\n\t\t\t\ttype: result.types.map((type) => type.type.name).join(', '),\n\t\t\t\tid: result.id,\n\t\t\t}))\n\t\t\tsetPokemon(pokemonList)\n\t\t\tsetFiltered(pokemonList)\n\t\t})\n\t}, [])\n\n    const isShiny = () =>{\n        let shiny = null\n        const num = Math.floor(Math.random() * 100)\n        if(num > 80){\n            shiny = true\n        }else{\n            shiny = false\n        }\n        return shiny\n    }\n\n\tconst handleClick = (name, id) => {\n        const shiny = isShiny()\n\t\tsetNameClick(true)\n\t\tsetPokemonName(name)\n\t\tsetPokemonId(id)\n        if(shiny){\n            setShiny(true)\n        }\n\t}\n\n\tuseEffect(() => {\n\t\tconst searchedPokemon = pokemon.filter((p) =>\n\t\t\tp?.name?.toLowerCase().includes(searchTermState.toLowerCase())\n\t\t)\n\t\tsetFiltered(searchedPokemon)\n\t}, [searchTermState])\n\n\tconst backToTop = () => {\n\t\tnavigate(0)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{nameClick ? (\n\t\t\t\t<GiveName\n\t\t\t\t\tsetNameClick={setNameClick}\n\t\t\t\t\tpokemonName={pokemonName}\n\t\t\t\t\tpokemonId={pokemonId}\n                    shiny={shiny}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n\t\t\t<div className='pokemon-container'>\n\t\t\t\t{filtered.map((pokemonObj) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='pokemon'\n\t\t\t\t\t\t\tkey={`list-${pokemonObj.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='pokemon-sprite'>\n\t\t\t\t\t\t\t\t<img src={pokemonObj.image} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2 className='pokemon-name'>\n\t\t\t\t\t\t\t\t{pokemonObj.name}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<div className='pokemon-type'>\n\t\t\t\t\t\t\t\ttype: {pokemonObj.type}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='add-button'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button-85 add-pokemon-button'\n\t\t\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t\t\tid={pokemonObj.id}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thandleClick(\n\t\t\t\t\t\t\t\t\t\t\tpokemonObj.name,\n\t\t\t\t\t\t\t\t\t\t\tpokemonObj.id\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n            <div className=\"top-button\">\n                <button className='button-85 back-to-top' onClick={backToTop}>\n                    üîù\n                </button>\n            </div>\n\t\t</>\n\t)\n}\n","/Users/kaciwooldridge/workspace/poke-capstone/src/components/Pokefile.js",["106"],[],"import { Route, Routes, Outlet } from \"react-router-dom\"\nimport { Authorized } from \"./views/Authorized\"\nimport { Login } from \"./auth/Login\"\nimport { Register } from \"./auth/Register\"\nimport \"./Pokefile.css\"\nimport { NavBar } from \"./nav/Navbar\"\nimport { Profile } from \"./profile/Profile\"\nimport { PokemonContainer } from \"./pokemon/PokemonContainer\"\nimport { Home } from \"./home/Home\"\nimport { TrainerList } from \"./trainers/TrainersList\"\n\n\nexport const Pokefile = () => {\n\tconst localPokeUser = localStorage.getItem(\"pokefile_user\")\n    const pokeUserObject = JSON.parse(localPokeUser)\n\treturn (\n\t\t<Routes>\n\t\t\t<Route path='/login' element={<Login />} />\n\t\t\t<Route path='/register' element={<Register />} />\n\n\t\t\t<Route\n\t\t\t\tpath='/'\n\t\t\t\telement={\n\t\t\t\t\t<Authorized>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t\t</>\n\t\t\t\t\t</Authorized>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Route\n\t\t\t\t\tpath='/'\n\t\t\t\t\telement={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\n\t\t\t\t>\n\n\t\t\t\t</Route>\n\t\t\t\t<Route path='pokemonList' element={<PokemonContainer />} />\n\t\t\t\t<Route path='profile/:userId' element={<Profile />} />\n\t\t\t\t<Route path='trainers' element={<TrainerList />} />\n\t\t\t</Route>\n\t\t</Routes>\n\t)\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Login.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/auth/Register.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/views/Authorized.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/nav/Navbar.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/Profile.js",["107","108","109","110","111","112","113","114"],[],"import React, { useState, useEffect } from \"react\"\nimport { useNavigate, useParams } from \"react-router-dom\"\nimport { EditPokemonName } from \"./EditPokemon\"\nimport { EditProfile } from \"./EditProfile\"\nimport \"./Profile.css\"\n\nexport const Profile = () => {\n    const {userId} = useParams()\n    const [user, setUser] = useState([\"\"])\n    const [pokemonPicks, setPokemonPicks] = useState([])\n    const [pokemon, setPokemon] = useState([])\n    const localPokeUser = localStorage.getItem(\"pokefile_user\")\n    const pokeUserObject = JSON.parse(localPokeUser)\n    const [editClick, setEditClick] = useState(false)\n    const [changeName, setChangeName] = useState(false)\n    const [pickId, setPickId] = useState(null)\n    const [currentProfile, setCurrentProfile] = useState(\"\")\n\n    useEffect(() =>{\n        fetch(`http://localhost:8088/users/${userId}/?_expand=team`)\n        .then(res => res.json())\n        .then ((data) =>{\n            setUser(data)\n        })}\n    ,[userId])\n\n    useEffect(() => {\n        fetch(`http://localhost:8088/pokemonPicks?userId=${userId}`)\n          .then((res) => res.json())\n          .then((data) => {\n            setPokemonPicks(data);\n          });\n      }, [userId]);\n\n      useEffect(() => {\n        const promises = [];\n        pokemonPicks.map((pick) => {\n          const url = `https://pokeapi.co/api/v2/pokemon/${pick.pokemonId}`;\n          promises.push(fetch(url).then((res) => res.json()));\n        });\n        Promise.all(promises).then((results) => {\n          const pokemonList = results.map((result, index) => ({\n            name: result.name,\n            image: result.sprites[\"front_default\"],\n            shinyImage: result.sprites[\"front_shiny\"],\n            type: result.types.map((type) => type.type.name).join(\", \"),\n            id: result.id,\n            pokemonPickId: pokemonPicks[index].id,\n            pokemonNickName: pokemonPicks[index].pokemonNickName,\n            shiny: pokemonPicks[index].shiny\n          }));\n          setPokemon(pokemonList);\n        });\n      }, [pokemonPicks]);\n\n\n\n    const handleClick = (evt) =>{\n        const match = pokemon.filter(poke => poke.pokemonPickId===parseInt(evt.target.value))\n        if(match[0].pokemonPickId===parseInt(evt.target.value)){\n            fetch(`http://localhost:8088/pokemonPicks/${match[0].pokemonPickId}`,{\n                method: \"DELETE\"\n            })\n            .then(() =>{\n                fetch(`http://localhost:8088/pokemonPicks?userId=${pokeUserObject.id}`)\n                .then((res) => res.json())\n                .then((data) => {\n                  setPokemonPicks(data)\n                })\n            })\n        }\n    }\n\n    const handleEditClick = () =>{\n        setEditClick(true)\n    }\n\n    const changeNameClick = (id) =>{\n        setChangeName(true)\n        setPickId(id)\n    }\n\n    return<>\n        { editClick? <EditProfile setEditClick={setEditClick} /> : \"\" }\n        { changeName? <EditPokemonName setChangeName={setChangeName} pickId={pickId}/> : \"\" }\n            <div className=\"profile-container\">\n                <div className=\"header\">\n                    <h1 className=\"user-name\">{user?.name}</h1>\n                    <div className=\"teamName\">member of {user?.team?.name}</div>\n                    {\n                        pokeUserObject.id === user?.id\n                        ? \n                        <button className=\"button-85 edit-profile\" onClick={handleEditClick}>edit profile</button> \n                        :\n                        \"\"\n                    }\n                </div>\n                <div className=\"mid\">\n                    <div className=\"profile-picture\">\n                        <img width=\"450px\" src={user?.profilePicture} />\n                    </div>\n                    <div className=\"aboutMe\">\n                    {user?.aboutMe}\n                    </div>\n                </div>\n                <div className=\"myPokemon\">\n                    <h2 className=\"my-pokemon-header\">My Pokemon</h2>\n                        <div className='pokemon-container'>\n                            {pokemon.map((pokemonObj) => {\n                                return (\n                                    <div\n                                        className='pokemon'\n                                        key={`${pokemonObj?.pokemonPickId}-${pokeUserObject.id}`}\n                                    >\n                                    {\n                                    pokeUserObject.id === user?.id\n                                    ? \n                                    <div className=\"edit-name-button\">\n                                        <button className=\"gear\" onClick={()=>{changeNameClick(parseInt(pokemonObj.pokemonPickId))}}>‚öôÔ∏è</button>\n                                    </div>\n                                    :\n                                    \"\"\n                                    }\n                                        <div className='pokemon-sprite'>\n                                        {\n                                            pokemonObj.shiny\n                                            ?\n                                            <img src={pokemonObj.shinyImage} />\n                                            :\n                                            <img src={pokemonObj.image} />\n                                        }\n                                        </div>\n                                        {\n                                            pokemonObj.pokemonNickName\n                                            ?\n                                            <h2 className='pokemon-name'>\n                                            {pokemonObj.pokemonNickName} \n                                            </h2>\n                                            :\n                                            <h2 className='pokemon-name'>\n                                            {pokemonObj.name} \n                                            </h2>\n                                        }\n                                        <div className='pokemon-type'>\n                                            type: {pokemonObj.type}\n                                        </div>\n                                        {\n                                        pokeUserObject.id === user?.id\n                                        ? \n                                        <div className=\"buttons\">\n                                            <button className='button-85' role=\"button\" id={pokemonObj.id} value={pokemonObj.pokemonPickId}\n                                                onClick={(event) =>{\n                                                    handleClick(event)\n                                                }}>\n                                            x\n                                            </button>\n                                        </div>\n                                        :\n                                        \"\"\n                                        }\n                                    </div>\n                                )\n                            })}\n                        </div>\n                </div>\n\n            </div>\n        </>\n\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonContainer.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/PokemonSearch.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/Home.js",["115"],[],"import { FeaturedPokemon } from \"./FeaturedPokemon\"\nimport \"./home.css\"\n\nexport const Home = () =>{\n    return <>\n        <div className=\"home-container\">\n            <h1>Welcome to Pokefile!</h1>\n            <img className=\"home__img\" src={require('./images/eevees.png')} border=\"0\" />\n            <div>\n                <FeaturedPokemon />\n            </div>\n        </div>\n    </>\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/EditProfile.js",["116"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const EditProfile = ({setEditClick}) =>{\n    const localPokeUser = localStorage.getItem(\"pokefile_user\")\n    const pokeUserObject = JSON.parse(localPokeUser)\n    const [teams, setTeams] = useState ([])\n    const [chosenTeam, setChosenTeam] = useState ('')\n    let navigate = useNavigate()\n    const [userInfo, setUserInfo] = useState({\n        name: \"\",\n        email: \"\",\n        profilePicture:\"\",\n        aboutMe: \"\",\n        teamId: 0\n    })\n\n    useEffect(() =>{\n        fetch(\"http://localhost:8088/teams\")\n        .then(res => res.json())\n        .then ((teamsArray) =>{\n            setTeams(teamsArray)\n        })}\n    ,[])\n\n    useEffect(() =>{\n        fetch(`http://localhost:8088/users?id=${pokeUserObject.id}`)\n            .then(res => res.json())\n            .then((data) =>{\n                const userObject = data[0]\n                setUserInfo(userObject)\n            })\n    },\n    [])\n\n    const handleClick = () =>{\n        setEditClick(false)\n    }\n\n    const handleClick2 = (event) =>{\n        console.log(userInfo)\n        event.preventDefault()\n        return fetch(`http://localhost:8088/users/${userInfo.id}`, {\n                method: \"PUT\",\n                headers:{\n                    \"Content-Type\": \"application/json\"\n                },\n                    body: JSON.stringify(userInfo)\n               })\n                    .then(res => res.json())\n                    .then(() =>{\n                        setEditClick(false)\n                    })\n                    .then(() =>{\n                        navigate(0)\n                    })\n    }\n\n    const updateUser = (evt) =>{\n        const copy = {...userInfo}\n        copy[evt.target.id] = evt.target.value\n        setUserInfo(copy)\n    }\n\n    const handleTeamChange = (event) => {\n        setChosenTeam(event.target.value)\n        const copy = {...userInfo}\n        copy.teamId = parseInt(event.target.value)\n        setUserInfo(copy)\n    }\n\n    return<>\n            <div id=\"changeName-form2\">\n                <fieldset className=\"name-form\">\n                <button className=\"x-button\" onClick={handleClick}> x </button>\n                    <h3 className=\"edit-header\">What would you like to change?</h3>   \n                    <div className=\"babies\">\n                        <label htmlFor=\"name\"> Name: </label>\n                        <input onChange={(evt)=>{updateUser(evt)}}\n                            type=\"text\" id=\"name\" className=\"form-control\"\n                            placeholder={userInfo.name} autoFocus />\n                    </div>\n                    <div className=\"babies\">\n                        <label htmlFor=\"email\"> Email Address: </label>\n                        <input onChange={(evt)=>{updateUser(evt)}}\n                            type=\"email\" id=\"email\" className=\"form-control\"\n                            placeholder={userInfo.email} />\n                    </div>\n                    <div className=\"babies\">\n                        <label htmlFor=\"profilePicture\"> Profile Picture: </label>\n                        <input onChange={(evt)=>{updateUser(evt)}}\n                            type=\"text\" id=\"profilePicture\" className=\"form-control\"\n                            placeholder={userInfo.profilePicture} />\n                    </div>\n                    <div className=\"babies\">\n                        <label htmlFor=\"aboutMe\"> About Me: </label>\n                        <input onChange={(evt)=>{updateUser(evt)}}\n                            type=\"text\" id=\"aboutMe\" className=\"form-control\"\n                            placeholder={userInfo.aboutMe} />\n                    </div>\n                    <div className=\"babies\">\n                        <label>Team:</label>\n                        <select className=\"form-control\" value={chosenTeam} onChange={handleTeamChange}>\n                            <option hidden>Change Team?</option>\n                            {teams.map((team) => (\n                            <option key={team.id} value={team.id} id={team.id}>{team.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"buttons\">\n                        \n                        <button type=\"submit\" className=\"button-85\" onClick={(evt)=>{handleClick2(evt)}}> ‚úì </button>\n                    </div>\n                </fieldset>\n            </div>\n    </>\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/pokemon/GiveName.js",["117"],[],"import { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const GiveName = ({setNameClick, pokemonName, pokemonId, shiny}) =>{\n    const localPokeUser = localStorage.getItem(\"pokefile_user\")\n    const pokeUserObject = JSON.parse(localPokeUser)\n    const [chosenPokemon, setChosenPokemon] = useState({\n        uniqueKey: 0,\n        userId: 0,\n        pokemonId: 0,\n        pokemonNickName: \"\",\n        shiny: null\n    })\n    const [newName, setNewName] = useState(\"\")\n\n    const yesNameClick = (evt) =>{\n        setNameClick(false)\n        const copy = {...chosenPokemon}\n        copy.userId = parseInt(pokeUserObject.id)\n        copy.pokemonId = parseInt(pokemonId)\n        copy.pokemonNickName = newName\n        copy.uniqueKey = new Date()-parseInt(pokemonId)\n        copy.shiny = shiny\n        setChosenPokemon(copy)\n\n\n        return fetch(\"http://localhost:8088/pokemonPicks\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(copy)\n        })\n            .then(res => res.json())\n    }\n\n\n\n    return<>\n        <div id=\"changeName-form3\">\n            <fieldset className=\"name-form\">\n                {\n                    shiny\n                    ?\n                    <h2>!!{pokemonName} is shiny!!</h2> \n                    :\n                    \"\"\n                }\n                <h3>{pokemonName} has been added to your pokedex!</h3>\n                <div>\n                    <label htmlFor=\"inputName\">Name:</label>\n                    <input\n                        type=\"text\"\n                        value={newName}\n                        onChange={evt => setNewName(evt.target.value)}\n                        className=\"form-control2\"\n                        placeholder={pokemonName}\n                        autoFocus />\n                </div>\n                <button className=\"button-80 button-85\" type=\"submit\" \n                    onClick={(evt) => {yesNameClick(evt)}}>\n                    ‚úì\n                </button>\n            </fieldset>\n        </div>\n    </>\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/FeaturedPokemon.js",["118","119"],[],"import { useState, useEffect } from \"react\"\nimport { AddFeaturedPokemon } from \"./AddFeaturedPokemon\"\n\nexport const FeaturedPokemon = () =>{\n    const[pokemon, setPokemon] = useState([])\n    const [nameClick, setNameClick] = useState(false)\n    const [pokemonName, setPokemonName] = useState('')\n\tconst [pokemonId, setPokemonId] = useState('')\n\n    useEffect(() => {\n        const promises = [];\n        for(let i=0; i<5; i++){\n            const num = Math.floor(Math.random() * 1008)\n            let url = `https://pokeapi.co/api/v2/pokemon/${num}`\n            promises.push(fetch(url).then((res) => res.json()))\n        }\n        Promise.all(promises).then((results) => {\n          const pokemonList = results.map((result) => ({\n            name: result.name,\n            image: result.sprites[\"front_default\"],\n            type: result.types.map((type) => type.type.name).join(\", \"),\n            id: result.id,\n          }));\n          setPokemon(pokemonList);\n        });\n      }, []);\n\n      const handleClick = (name, id) => {\n\t\tsetNameClick(true)\n\t\tsetPokemonName(name)\n\t\tsetPokemonId(id)\n\t}\n\n    return (\n\t\t<>\n\t\t\t{nameClick ? (\n\t\t\t\t<AddFeaturedPokemon\n\t\t\t\t\tsetNameClick={setNameClick}\n\t\t\t\t\tpokemonName={pokemonName}\n\t\t\t\t\tpokemonId={pokemonId}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t''\n\t\t\t)}\n            <h2 className=\"my-pokemon-header\">featured pokemon</h2>\n\t\t\t<div className='pokemon-container'>\n\t\t\t\t{pokemon.map((pokemonObj) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='pokemon'\n\t\t\t\t\t\t\tkey={`list-${pokemonObj.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className='pokemon-sprite'>\n\t\t\t\t\t\t\t\t<img src={pokemonObj.image} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<h2 className='pokemon-name'>\n\t\t\t\t\t\t\t\t{pokemonObj.name}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<div className='pokemon-type'>\n\t\t\t\t\t\t\t\ttype: {pokemonObj.type}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='add-button'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='button-85 add-pokemon-button'\n\t\t\t\t\t\t\t\t\trole='button'\n\t\t\t\t\t\t\t\t\tid={pokemonObj.id}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\thandleClick(\n\t\t\t\t\t\t\t\t\t\t\tpokemonObj.name,\n\t\t\t\t\t\t\t\t\t\t\tpokemonObj.id\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t)\n\n}\n","/Users/kaciwooldridge/workspace/poke-capstone/src/components/home/AddFeaturedPokemon.js",[],[],"/Users/kaciwooldridge/workspace/poke-capstone/src/components/profile/EditPokemon.js",["120","121"],[],"import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const EditPokemonName = ({setChangeName, pickId, pokemonName}) =>{\n    const localPokeUser = localStorage.getItem(\"pokefile_user\")\n    const pokeUserObject = JSON.parse(localPokeUser)\n    let navigate = useNavigate()\n    const [pickInfo, setPickInfo] = useState({\n        \"uniqueKey\": 0,\n        \"userId\": 0,\n        \"pokemonId\": 0,\n        \"pokemonNickName\": \"\",\n        \"id\": 0,\n        \"shiny\": null\n      })\n\n      useEffect(() => {\n        fetch(`http://localhost:8088/pokemonPicks/${pickId}`)\n          .then((res) => res.json())\n          .then((data) => {\n            const pickObject = data[0]\n            setPickInfo(pickObject)\n          });\n      }, []);\n\n      const updatePick = (evt) =>{\n        const copy = {...pickInfo}\n        copy[evt.target.id] = evt.target.value\n        setPickInfo(copy)\n    }\n\n    const handleClick = () =>{\n        setChangeName(false)\n    }\n\n    const handleClick2 = (event) =>{\n        console.log(pickInfo)\n        event.preventDefault()\n        return fetch(`http://localhost:8088/pokemonPicks/${pickId}`, {\n                method: \"PATCH\",\n                headers:{\n                    \"Content-Type\": \"application/json\"\n                },\n                    body: JSON.stringify(pickInfo)\n               })\n                    .then(res => res.json())\n                    .then(() =>{\n                        setChangeName(false)\n                    })\n                    .then(() =>{\n                        navigate(0)\n                    })\n    }\n\n    return<>\n            <div id=\"changeName-form\">\n                <fieldset className=\"name-form\">\n                <button className=\"x-button\" onClick={handleClick}> x </button>\n                    <h3 className=\"edit-header\">Want to change your pokemon's name?</h3>   \n                    <div className=\"babies\">\n                        <label htmlFor=\"pokemonNickName\"> Name: </label>\n                        <input onChange={(evt)=>{updatePick(evt)}}\n                            type=\"text\" id=\"pokemonNickName\" className=\"form-control\"\n                            placeholder={pokemonName} autoFocus />\n                    </div>\n                    <div className=\"buttons\"> \n                        <button type=\"submit\" className=\"button-85\" onClick={(evt)=>{handleClick2(evt)}}> ‚úì </button>\n                    </div>\n                </fieldset>\n            </div>\n    </>\n}","/Users/kaciwooldridge/workspace/poke-capstone/src/components/trainers/TrainersList.js",["122","123","124","125"],[],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Trainers.css\"\n\nexport const TrainerList = () => {\n    const [trainerArray, setTrainerArray] = useState([])\n    const [pokemonPicks, setPokemonPicks] = useState([])\n    const [pokemon, setPokemon] = useState([])\n\n        useEffect(() =>{\n            fetch(`http://localhost:8088/users`)\n                .then(res=> res.json())\n                .then((data) =>{\n                    setTrainerArray(data)\n                })\n            },\n            []\n        )\n\n    return<section className=\"trainer\">\n        {trainerArray.map(trainer=>{\n            return (\n            <div className=\"trainer-container\" key={trainer.id}>\n                <Link to={`../profile/${trainer.id}`} className=\"link\"> <div className=\"trainer-name\">{trainer.name}</div> </Link>\n            </div>\n            )\n        })}\n    </section>\n}",{"ruleId":"126","severity":1,"message":"127","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":62,"column":5,"nodeType":"132","endLine":62,"endColumn":22,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":88,"column":9,"nodeType":"136","endLine":88,"endColumn":39},{"ruleId":"137","severity":1,"message":"138","line":97,"column":9,"nodeType":"136","endLine":107,"endColumn":10},{"ruleId":"126","severity":1,"message":"127","line":15,"column":11,"nodeType":"128","messageId":"129","endLine":15,"endColumn":25},{"ruleId":"126","severity":1,"message":"139","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"126","severity":1,"message":"140","line":17,"column":12,"nodeType":"128","messageId":"129","endLine":17,"endColumn":26},{"ruleId":"126","severity":1,"message":"141","line":17,"column":28,"nodeType":"128","messageId":"129","endLine":17,"endColumn":45},{"ruleId":"142","severity":1,"message":"143","line":37,"column":33,"nodeType":"144","messageId":"145","endLine":37,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":100,"column":25,"nodeType":"136","endLine":100,"endColumn":73},{"ruleId":"134","severity":1,"message":"135","line":128,"column":45,"nodeType":"136","endLine":128,"endColumn":80},{"ruleId":"134","severity":1,"message":"135","line":130,"column":45,"nodeType":"136","endLine":130,"endColumn":75},{"ruleId":"137","severity":1,"message":"138","line":151,"column":45,"nodeType":"136","endLine":154,"endColumn":52},{"ruleId":"134","severity":1,"message":"135","line":8,"column":13,"nodeType":"136","endLine":8,"endColumn":90},{"ruleId":"130","severity":1,"message":"146","line":34,"column":5,"nodeType":"132","endLine":34,"endColumn":7,"suggestions":"147"},{"ruleId":"126","severity":1,"message":"139","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":54,"column":9,"nodeType":"136","endLine":54,"endColumn":39},{"ruleId":"137","severity":1,"message":"138","line":63,"column":9,"nodeType":"136","endLine":73,"endColumn":10},{"ruleId":"126","severity":1,"message":"127","line":6,"column":11,"nodeType":"128","messageId":"129","endLine":6,"endColumn":25},{"ruleId":"130","severity":1,"message":"148","line":24,"column":10,"nodeType":"132","endLine":24,"endColumn":12,"suggestions":"149"},{"ruleId":"126","severity":1,"message":"150","line":7,"column":12,"nodeType":"128","messageId":"129","endLine":7,"endColumn":24},{"ruleId":"126","severity":1,"message":"151","line":7,"column":26,"nodeType":"128","messageId":"129","endLine":7,"endColumn":41},{"ruleId":"126","severity":1,"message":"152","line":8,"column":12,"nodeType":"128","messageId":"129","endLine":8,"endColumn":19},{"ruleId":"126","severity":1,"message":"153","line":8,"column":21,"nodeType":"128","messageId":"129","endLine":8,"endColumn":31},"no-unused-vars","'pokeUserObject' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokemon'. Either include it or remove the dependency array.","ArrayExpression",["154"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'useNavigate' is defined but never used.","'currentProfile' is assigned a value but never used.","'setCurrentProfile' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'pokeUserObject.id'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'pickId'. Either include it or remove the dependency array.",["156"],"'pokemonPicks' is assigned a value but never used.","'setPokemonPicks' is assigned a value but never used.","'pokemon' is assigned a value but never used.","'setPokemon' is assigned a value but never used.",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [pokemon, searchTermState]",{"range":"163","text":"164"},"Update the dependencies array to be: [pokeUserObject.id]",{"range":"165","text":"166"},"Update the dependencies array to be: [pickId]",{"range":"167","text":"168"},[1756,1773],"[pokemon, searchTermState]",[997,999],"[pokeUserObject.id]",[761,763],"[pickId]"]